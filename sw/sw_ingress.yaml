apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0,::/0
    creationTimestamp: "2021-12-15T07:59:48Z"
    generateName: cm-acme-http-solver-
    generation: 1
    labels:
      acme.cert-manager.io/http-domain: "2032142703"
      acme.cert-manager.io/http-token: "959516257"
      acme.cert-manager.io/http01-solver: "true"
    name: cm-acme-http-solver-qjvxt
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: acme.cert-manager.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Challenge
      name: sm-test-fe3.moimstone.com-tls-qrgnr-1827183278-3624775563
      uid: 217ce419-87e0-4229-bcae-5a34ed009e30
    resourceVersion: "114878457"
    selfLink: /apis/extensions/v1beta1/namespaces/smartwork-test/ingresses/cm-acme-http-solver-qjvxt
    uid: ecabebf4-fdfb-420f-8785-a6f30cdcf6bc
  spec:
    rules:
    - host: sm-test-fe3.moimstone.com
      http:
        paths:
        - backend:
            serviceName: cm-acme-http-solver-7gsw5
            servicePort: 8089
          path: /.well-known/acme-challenge/6x97WmvfuzE4b87V3heef931il64NiUyIsik_yF-SBw
          pathType: ImplementationSpecific
  status:
    loadBalancer:
      ingress:
      - ip: 193.123.241.75
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","nginx.ingress.kubernetes.io/cors-allow-origin":"*","nginx.ingress.kubernetes.io/enable-cors":"true","nginx.ingress.kubernetes.io/rewrite-target":"/$2","nginx.ingress.kubernetes.io/service-upstream":"true","nginx.ingress.kubernetes.io/ssl-redirect":"false"},"name":"sm-test-fe.moimstone.com-ingress","namespace":"smartwork-test"},"spec":{"rules":[{"host":"sm-test-fe.moimstone.com","http":{"paths":[{"backend":{"serviceName":"web","servicePort":8080},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["sm-test-fe.moimstone.com"],"secretName":"sm-test-fe.moimstone.com-tls"}]}}
      nginx.ingress.kubernetes.io/cors-allow-origin: '*'
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    creationTimestamp: "2021-03-11T05:32:33Z"
    generation: 3
    name: sm-test-fe.moimstone.com-ingress
    namespace: smartwork-test
    resourceVersion: "5067963"
    selfLink: /apis/extensions/v1beta1/namespaces/smartwork-test/ingresses/sm-test-fe.moimstone.com-ingress
    uid: 455bb878-8201-4507-85f3-3146582e3eee
  spec:
    rules:
    - host: sm-test-fe.moimstone.com
      http:
        paths:
        - backend:
            serviceName: service-web-service
            servicePort: 3000
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - sm-test-fe.moimstone.com
      secretName: sm-test-fe.moimstone.com-tls
  status:
    loadBalancer:
      ingress:
      - ip: 193.123.241.75
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","nginx.ingress.kubernetes.io/cors-allow-origin":"*","nginx.ingress.kubernetes.io/enable-cors":"true","nginx.ingress.kubernetes.io/rewrite-target":"/$2","nginx.ingress.kubernetes.io/service-upstream":"true","nginx.ingress.kubernetes.io/ssl-redirect":"false"},"name":"sm-test-fe2.moimstone.com-ingress","namespace":"smartwork-test"},"spec":{"rules":[{"host":"sm-test-fe2.moimstone.com","http":{"paths":[{"backend":{"serviceName":"web","servicePort":8080},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["sm-test-fe2.moimstone.com"],"secretName":"sm-test-fe2.moimstone.com-tls"}]}}
      nginx.ingress.kubernetes.io/cors-allow-origin: '*'
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    creationTimestamp: "2021-06-22T16:20:53Z"
    generation: 2
    name: sm-test-fe2.moimstone.com-ingress
    namespace: smartwork-test
    resourceVersion: "42890403"
    selfLink: /apis/extensions/v1beta1/namespaces/smartwork-test/ingresses/sm-test-fe2.moimstone.com-ingress
    uid: 24551682-1c13-4452-9358-d538f2cd967b
  spec:
    rules:
    - host: sm-test-fe2.moimstone.com
      http:
        paths:
        - backend:
            serviceName: service-web2-service
            servicePort: 3000
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - sm-test-fe2.moimstone.com
      secretName: sm-test-fe2.moimstone.com-tls
  status:
    loadBalancer:
      ingress:
      - ip: 193.123.241.75
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","nginx.ingress.kubernetes.io/cors-allow-origin":"*","nginx.ingress.kubernetes.io/enable-cors":"true","nginx.ingress.kubernetes.io/rewrite-target":"/$2","nginx.ingress.kubernetes.io/service-upstream":"true","nginx.ingress.kubernetes.io/ssl-redirect":"false"},"creationTimestamp":"2021-03-11T05:32:24Z","generation":1,"managedFields":[{"apiVersion":"networking.k8s.io/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cert-manager.io/cluster-issuer":{},"f:kubectl.kubernetes.io/last-applied-configuration":{},"f:nginx.ingress.kubernetes.io/cors-allow-origin":{},"f:nginx.ingress.kubernetes.io/enable-cors":{},"f:nginx.ingress.kubernetes.io/rewrite-target":{},"f:nginx.ingress.kubernetes.io/service-upstream":{},"f:nginx.ingress.kubernetes.io/ssl-redirect":{}}},"f:spec":{"f:tls":{}}},"manager":"kubectl","operation":"Update","time":"2021-03-11T05:32:24Z"},{"apiVersion":"networking.k8s.io/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:rules":{}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}},"manager":"nginx-ingress-controller","operation":"Update","time":"2021-03-11T05:32:24Z"}],"name":"sm-test.moimstone.com-ingress","namespace":"smartwork-test","resourceVersion":"48080","selfLink":"/apis/extensions/v1beta1/namespaces/smartwork-test/ingresses/sm-test.moimstone.com-ingress","uid":"4e36f3b5-8572-4ae9-bc35-c2feaf2b86e0"},"spec":{"rules":[{"host":"sm-test.moimstone.com","http":{"paths":[{"backend":{"serviceName":"web","servicePort":8080},"path":"/","pathType":"Prefix"},{"backend":{"serviceName":"service-storagemgmt-service","servicePort":4020},"path":"/storagemgmt(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-conference-service","servicePort":4040},"path":"/conference(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-vendor-service","servicePort":4030},"path":"/vendor(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-project-service","servicePort":4020},"path":"/project(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-mcuc-service","servicePort":4020},"path":"/mcuc(/|$)(.*)","pathType":"Prefix"},{"backend":{"serviceName":"service-devicemgmt-service","servicePort":4020},"path":"/devicemgmt(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-ippevent-service","servicePort":4020},"path":"/ippevent(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-contact-service","servicePort":4020},"path":"/contact(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-invitation-service","servicePort":4020},"path":"/invitation(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-auth-service","servicePort":4100},"path":"/auth(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-forum-service","servicePort":4102},"path":"/forum(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-notification-service","servicePort":4102},"path":"/notification(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-firebase-service","servicePort":4103},"path":"/firebase(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-user-service","servicePort":8081},"path":"/user(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"service-scheduler-service","servicePort":8081},"path":"/scheduler(/|$)(.+)","pathType":"Prefix"},{"backend":{"serviceName":"my-nginx","servicePort":80},"path":"/","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["sm-test.moimstone.com"],"secretName":"sm-test.moimstone.com-tls"}]},"status":{"loadBalancer":{"ingress":[{"ip":"193.123.241.75"}]}}}
      nginx.ingress.kubernetes.io/client-body-buffer-size: 1m
      nginx.ingress.kubernetes.io/cors-allow-origin: '*'
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    creationTimestamp: "2021-03-11T05:32:24Z"
    generation: 5
    name: sm-test.moimstone.com-ingress
    namespace: smartwork-test
    resourceVersion: "54437197"
    selfLink: /apis/extensions/v1beta1/namespaces/smartwork-test/ingresses/sm-test.moimstone.com-ingress
    uid: 4e36f3b5-8572-4ae9-bc35-c2feaf2b86e0
  spec:
    rules:
    - host: sm-test.moimstone.com
      http:
        paths:
        - backend:
            serviceName: web
            servicePort: 8080
          path: /
          pathType: Prefix
        - backend:
            serviceName: service-storagemgmt-service
            servicePort: 4020
          path: /storagemgmt(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-conference-service
            servicePort: 4040
          path: /conference(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-vendor-service
            servicePort: 4030
          path: /vendor(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-project-service
            servicePort: 4020
          path: /project(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-mcuc-service
            servicePort: 4020
          path: /mcuc(/|$)(.*)
          pathType: Prefix
        - backend:
            serviceName: service-devicemgmt-service
            servicePort: 4020
          path: /devicemgmt(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-ippevent-service
            servicePort: 4020
          path: /ippevent(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-contact-service
            servicePort: 4020
          path: /contact(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-invitation-service
            servicePort: 4020
          path: /invitation(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-auth-service
            servicePort: 4100
          path: /auth(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-forum-service
            servicePort: 4102
          path: /forum(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-notification-service
            servicePort: 4102
          path: /notification(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-firebase-service
            servicePort: 4103
          path: /firebase(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-user-service
            servicePort: 8081
          path: /user(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-scheduler-service
            servicePort: 8081
          path: /scheduler(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-ippsynccl-service
            servicePort: 4020
          path: /calllog(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-ippsyncpb-service
            servicePort: 4020
          path: /pb(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-ippsyncsms-service
            servicePort: 4020
          path: /sms(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-usersettings-service
            servicePort: 4020
          path: /usersettings(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: service-apns-service
            servicePort: 4103
          path: /apns(/|$)(.+)
          pathType: Prefix
        - backend:
            serviceName: my-nginx
            servicePort: 80
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - sm-test.moimstone.com
      secretName: sm-test.moimstone.com-tls
  status:
    loadBalancer:
      ingress:
      - ip: 193.123.241.75
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
