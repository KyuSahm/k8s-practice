apiVersion: v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2022-01-07T07:05:03Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 5b756b64d6
    name: deployment-apns-service-5b756b64d6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "128948183"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-5b756b64d6
    uid: a1763cbf-10de-4923-9053-4fd9c9981fb3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 5b756b64d6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-07T16:05:01+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 5b756b64d6
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:644
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2022-01-18T08:09:50Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 5bb9c85ffb
    name: deployment-apns-service-5bb9c85ffb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "128953497"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-5bb9c85ffb
    uid: fc48c285-c263-41a5-9910-dc316921de0d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 5bb9c85ffb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:09:51+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 5bb9c85ffb
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:1272
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2022-01-18T08:22:27Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 5dd5f44dd6
    name: deployment-apns-service-5dd5f44dd6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "129341382"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-5dd5f44dd6
    uid: ff07949c-a4ad-46d4-b6c9-48fffaff08d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 5dd5f44dd6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:22:29+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 5dd5f44dd6
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:1272
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-11-24T06:40:32Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 5fdb6859ff
    name: deployment-apns-service-5fdb6859ff
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "124380418"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-5fdb6859ff
    uid: 2b7834b7-a516-4ce7-b45b-b2e77ee869cd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 5fdb6859ff
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 5fdb6859ff
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:644
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-08-27T06:17:12Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 74b9df4689
    name: deployment-apns-service-74b9df4689
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "106153075"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-74b9df4689
    uid: 273710c3-ab31-4322-9820-8d07bd92e382
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 74b9df4689
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-08-27T14:51:12+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 74b9df4689
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:644
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2021-07-21T10:24:28Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 765884d46f
    name: deployment-apns-service-765884d46f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "69718938"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-765884d46f
    uid: 0a228d0a-8e92-4e8f-8c0b-60d24d6504ea
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 765884d46f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 765884d46f
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/apnsservice:2432
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2022-01-18T08:05:48Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 766d87b846
    name: deployment-apns-service-766d87b846
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "128949530"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-766d87b846
    uid: 9594506d-ae32-49a5-ac53-941519a60469
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 766d87b846
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-07T16:05:01+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 766d87b846
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:1272
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-11-24T04:10:55Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: 787bf8f8b
    name: deployment-apns-service-787bf8f8b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "106196719"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-787bf8f8b
    uid: 56cfaeaa-24aa-450d-88da-fd844789b182
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 787bf8f8b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 787bf8f8b
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:644
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2022-01-19T06:52:16Z"
    generation: 1
    labels:
      app: apns-service
      pod-template-hash: 84d4497897
    name: deployment-apns-service-84d4497897
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "129341370"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-84d4497897
    uid: f7a1e717-b559-4b7b-b93a-71e5a1e5ebbd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: 84d4497897
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:22:29+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: 84d4497897
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/apnsservice:1277
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-07-21T10:00:45Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: bfcc8f87d
    name: deployment-apns-service-bfcc8f87d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "54570717"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-bfcc8f87d
    uid: cc616241-f462-4b3c-90d5-59275e2ba7f9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: bfcc8f87d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: bfcc8f87d
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/apnsservice:2432
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-08-27T05:51:12Z"
    generation: 2
    labels:
      app: apns-service
      pod-template-hash: cc77d8fcb
    name: deployment-apns-service-cc77d8fcb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-apns-service
      uid: 8545a75c-38da-4d1a-b226-e84dbca05961
    resourceVersion: "69726411"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-apns-service-cc77d8fcb
    uid: ab1c491a-df2e-4a48-81f9-4187f950ff26
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: apns-service
        pod-template-hash: cc77d8fcb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-08-27T14:51:12+09:00"
        creationTimestamp: null
        labels:
          app: apns-service
          pod-template-hash: cc77d8fcb
        name: apns-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/apnsservice:2432
          imagePullPolicy: Always
          name: container-apns-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-11-23T08:41:27Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 599b6ff8f6
    name: deployment-auth-service-599b6ff8f6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "105821375"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-599b6ff8f6
    uid: d746dfb1-b81d-46d2-808d-3f4453ebfa7e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 599b6ff8f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-23T17:41:27+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 599b6ff8f6
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-21T10:00:45Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 5b578cd6
    name: deployment-auth-service-5b578cd6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "54570591"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-5b578cd6
    uid: b520df03-6dd5-40f6-bc9d-f044b6ef6b1a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 5b578cd6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 5b578cd6
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-07-07T01:28:26Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 7884cb7d44
    name: deployment-auth-service-7884cb7d44
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "48784489"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-7884cb7d44
    uid: 3f1056f2-a8f3-4f56-8e00-0b7e3e617c7d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 7884cb7d44
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 7884cb7d44
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/authservice:1919
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-11-24T06:40:32Z"
    generation: 1
    labels:
      app: auth-service
      pod-template-hash: 7b94bffbf4
    name: deployment-auth-service-7b94bffbf4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "106196471"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-7b94bffbf4
    uid: 02d65397-1e93-4580-b9dc-88716ac8ec3c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 7b94bffbf4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 7b94bffbf4
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-07-14T07:54:18Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 7c546d58b9
    name: deployment-auth-service-7c546d58b9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "54561800"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-7c546d58b9
    uid: 02407abc-09af-4c19-8bb3-2d757dd49f34
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 7c546d58b9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 7c546d58b9
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-07-07T09:09:06Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 7c98976d56
    name: deployment-auth-service-7c98976d56
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "51644603"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-7c98976d56
    uid: 5154319a-b734-4cdb-beed-550a5c2a7201
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 7c98976d56
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 7c98976d56
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/authservice:1919
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-07-21T10:24:28Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 7fddd4f8b9
    name: deployment-auth-service-7fddd4f8b9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "105812842"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-7fddd4f8b9
    uid: 98fe26cc-38d1-450c-8403-3ba96a06a6c3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 7fddd4f8b9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 7fddd4f8b9
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-11-23T08:23:33Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 859f9f58d9
    name: deployment-auth-service-859f9f58d9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "105817995"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-859f9f58d9
    uid: 2f8dc29d-cd1f-4673-a05b-0904180d87f4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 859f9f58d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-23T17:23:33+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 859f9f58d9
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: 9bc597479
    name: deployment-auth-service-9bc597479
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "106196698"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-9bc597479
    uid: 1ed964a3-6cbd-4212-a8a9-eb67b248ba76
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: 9bc597479
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: 9bc597479
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-07-21T09:59:18Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: d95bf987
    name: deployment-auth-service-d95bf987
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "54562947"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-d95bf987
    uid: 21df53ce-2a4a-4c7a-9af2-3a355d625a4b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: d95bf987
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: d95bf987
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-11-23T08:53:08Z"
    generation: 2
    labels:
      app: auth-service
      pod-template-hash: f87b9fd78
    name: deployment-auth-service-f87b9fd78
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-auth-service
      uid: f1bb323a-1f49-4c4b-a6d3-abf81e174bda
    resourceVersion: "106153034"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-auth-service-f87b9fd78
    uid: bfd342b0-bec4-487a-824e-cb57a5a11320
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: auth-service
        pod-template-hash: f87b9fd78
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-23T17:53:08+09:00"
        creationTimestamp: null
        labels:
          app: auth-service
          pod-template-hash: f87b9fd78
        name: auth-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/authservice:497
          imagePullPolicy: Always
          name: container-auth-service
          ports:
          - containerPort: 4100
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
    creationTimestamp: "2021-08-12T07:23:47Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 57b8d977d
    name: deployment-conference-service-57b8d977d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "65622587"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-57b8d977d
    uid: 67c3f7fd-a518-4346-af7d-ac71198d9300
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 57b8d977d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 57b8d977d
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:604
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
    creationTimestamp: "2021-08-17T06:27:10Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 5866f5dcc9
    name: deployment-conference-service-5866f5dcc9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "68068101"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-5866f5dcc9
    uid: cd8a45b4-d9d3-4d12-b31d-bfbb4b8116be
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 5866f5dcc9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 5866f5dcc9
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:636
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "50"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 58cfd4ddbd
    name: deployment-conference-service-58cfd4ddbd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "106196851"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-58cfd4ddbd
    uid: 251a8290-8d55-4ce6-a07d-54f989c890c4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 58cfd4ddbd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 58cfd4ddbd
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:819
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "47"
    creationTimestamp: "2021-10-07T07:39:22Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 5f798fcd5d
    name: deployment-conference-service-5f798fcd5d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "94243068"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-5f798fcd5d
    uid: a75cb568-bc4b-43bc-9209-278f8e3a1589
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 5f798fcd5d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 5f798fcd5d
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:815
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
    creationTimestamp: "2021-08-09T05:15:17Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 5fd84779c5
    name: deployment-conference-service-5fd84779c5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "63584119"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-5fd84779c5
    uid: 0c3eb059-7578-42ba-9910-3a28610fb281
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 5fd84779c5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 5fd84779c5
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:580
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
    creationTimestamp: "2021-08-23T05:22:54Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 67b98789c
    name: deployment-conference-service-67b98789c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "86543179"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-67b98789c
    uid: 530ed4e0-a315-43c1-90e7-190670653f25
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 67b98789c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 67b98789c
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:663
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "48"
    creationTimestamp: "2021-10-26T05:30:23Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 6956c4fd9
    name: deployment-conference-service-6956c4fd9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "94244857"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-6956c4fd9
    uid: e477667d-f7d9-4cb4-a6a8-35fedd29cbf9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 6956c4fd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 6956c4fd9
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:818
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "51"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 1
    labels:
      app: conference-service
      pod-template-hash: 74cd64cc65
    name: deployment-conference-service-74cd64cc65
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "106196723"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-74cd64cc65
    uid: 54572fa4-ba8f-4ad5-b626-ae4a32e05ddd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 74cd64cc65
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 74cd64cc65
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:819
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "49"
    creationTimestamp: "2021-10-26T05:37:12Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 7fdf5d7f4
    name: deployment-conference-service-7fdf5d7f4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "106153058"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-7fdf5d7f4
    uid: fa2ac570-1890-46df-bbcf-1548b0f15bbb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 7fdf5d7f4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 7fdf5d7f4
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:819
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
    creationTimestamp: "2021-07-27T06:38:38Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 867cb99c94
    name: deployment-conference-service-867cb99c94
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "57030236"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-867cb99c94
    uid: 2e4a0764-8f9e-4886-8e17-ba7edf8284d2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 867cb99c94
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 867cb99c94
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:565
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
    creationTimestamp: "2021-07-27T09:28:56Z"
    generation: 2
    labels:
      app: conference-service
      pod-template-hash: 8b5bdf4d7
    name: deployment-conference-service-8b5bdf4d7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-conference-service
      uid: 33b57a13-b0ce-4a6d-9f93-40a6e453d61b
    resourceVersion: "62314085"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-conference-service-8b5bdf4d7
    uid: 6f01f3f3-fc36-4e17-a1f9-729edfcab972
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: conference-service
        pod-template-hash: 8b5bdf4d7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: conference-service
          pod-template-hash: 8b5bdf4d7
        name: conference-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/conferenceservice:566
          imagePullPolicy: Always
          name: container-conference-service
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
    creationTimestamp: "2022-01-11T09:55:24Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 59ff7bb6c4
    name: deployment-contact-service-59ff7bb6c4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126434178"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-59ff7bb6c4
    uid: 1cc41f0b-21b6-4fbc-a891-8753c2412d45
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 59ff7bb6c4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 59ff7bb6c4
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:1217
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "38"
    creationTimestamp: "2021-07-21T10:24:28Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 5b4688d5c5
    name: deployment-contact-service-5b4688d5c5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "71811144"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-5b4688d5c5
    uid: f07758ae-2e64-45ed-b0c3-9beb333988dc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 5b4688d5c5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 5b4688d5c5
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:360
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "40"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 5b49c9457
    name: deployment-contact-service-5b49c9457
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "106196714"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-5b49c9457
    uid: 19d9e97f-8670-454a-9adf-5bbca8eeec24
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 5b49c9457
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 5b49c9457
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:690
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 6df66c4656
    name: deployment-contact-service-6df66c4656
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "115245314"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-6df66c4656
    uid: f004f445-ac24-4654-bbcf-2ba4983611cc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 6df66c4656
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 6df66c4656
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:690
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
    creationTimestamp: "2021-12-16T05:15:26Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 6f88c4b8b7
    name: deployment-contact-service-6f88c4b8b7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126054853"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-6f88c4b8b7
    uid: 1e614bda-7481-4017-9ee4-6be143b02cef
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 6f88c4b8b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 6f88c4b8b7
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:952
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
    creationTimestamp: "2022-01-12T07:09:51Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 6fd9ccf59c
    name: deployment-contact-service-6fd9ccf59c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126462868"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-6fd9ccf59c
    uid: 74a32cb2-3be4-45af-8ace-f627e929dcef
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 6fd9ccf59c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 6fd9ccf59c
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:1223
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
    creationTimestamp: "2022-01-11T08:11:56Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 7547bd74fd
    name: deployment-contact-service-7547bd74fd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126084693"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-7547bd74fd
    uid: 9bc0e8e4-5f03-4cc0-9fd5-b91c2d8be17c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 7547bd74fd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 7547bd74fd
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:1190
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "39"
    creationTimestamp: "2021-09-01T08:02:40Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 7769d787f
    name: deployment-contact-service-7769d787f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "106152959"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-7769d787f
    uid: cc6bec8f-84b6-4e3a-8cb5-2dcf738c3142
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 7769d787f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 7769d787f
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:690
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
    creationTimestamp: "2022-01-12T06:11:37Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 79db4b59f5
    name: deployment-contact-service-79db4b59f5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126450953"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-79db4b59f5
    uid: 05d7e401-5d47-470c-a798-6f44cb5ddbdc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 79db4b59f5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 79db4b59f5
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:1221
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "47"
    creationTimestamp: "2022-01-12T07:51:14Z"
    generation: 1
    labels:
      app: contact-service
      pod-template-hash: 7b7f8f59f6
    name: deployment-contact-service-7b7f8f59f6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "126462857"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-7b7f8f59f6
    uid: bbb6b5de-7b10-4b77-938d-c27127a42639
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 7b7f8f59f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 7b7f8f59f6
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:1224
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "37"
    creationTimestamp: "2021-07-21T10:00:45Z"
    generation: 2
    labels:
      app: contact-service
      pod-template-hash: 7c885dbd88
    name: deployment-contact-service-7c885dbd88
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-contact-service
      uid: 91facfac-3cd2-4031-b0cd-7e468ac3aa91
    resourceVersion: "54570898"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-contact-service-7c885dbd88
    uid: a5474675-4a38-4010-9b68-e4ee2b4ed876
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contact-service
        pod-template-hash: 7c885dbd88
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: contact-service
          pod-template-hash: 7c885dbd88
        name: contact-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/contactservice:360
          imagePullPolicy: Always
          name: container-contact-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "52"
    creationTimestamp: "2021-08-09T02:59:01Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 547c9c9fb4
    name: deployment-devicemgmt-service-547c9c9fb4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "68482246"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-547c9c9fb4
    uid: 19805f5f-cdb1-415a-9a55-4fc58a01b70b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 547c9c9fb4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 547c9c9fb4
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:578
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "58"
    creationTimestamp: "2022-01-18T08:05:52Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 548d949c8f
    name: deployment-devicemgmt-service-548d949c8f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "128949518"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-548d949c8f
    uid: d6246f8d-914f-4681-abf2-f3d3a34b9690
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 548d949c8f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 548d949c8f
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:1274
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "49"
    creationTimestamp: "2021-07-21T09:59:18Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 55c68c8565
    name: deployment-devicemgmt-service-55c68c8565
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "54563073"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-55c68c8565
    uid: 0b25d329-a9fa-4b40-aa46-c0f2d0740d2d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 55c68c8565
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 55c68c8565
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:513
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "55"
    creationTimestamp: "2021-11-24T03:51:21Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 5bdccf5565
    name: deployment-devicemgmt-service-5bdccf5565
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "106152977"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-5bdccf5565
    uid: 53473973-515c-43c9-831c-a2a15a7afad3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 5bdccf5565
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T12:51:21+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 5bdccf5565
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:704
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "57"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 5dc84657d6
    name: deployment-devicemgmt-service-5dc84657d6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "128948336"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-5dc84657d6
    uid: 4089f611-4aec-4b81-b0ad-27d98ceaf2ce
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 5dc84657d6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 5dc84657d6
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:704
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "50"
    creationTimestamp: "2021-07-21T10:00:45Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 66f6c9dcc6
    name: deployment-devicemgmt-service-66f6c9dcc6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "54570719"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-66f6c9dcc6
    uid: 7878292f-f466-4f75-99bd-4defdde57a18
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 66f6c9dcc6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 66f6c9dcc6
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:513
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "54"
    creationTimestamp: "2021-09-10T08:29:42Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 6878964c6f
    name: deployment-devicemgmt-service-6878964c6f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "106146886"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-6878964c6f
    uid: 1b873252-760b-41c7-aa83-e8d637e543fc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 6878964c6f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 6878964c6f
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:704
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "59"
    creationTimestamp: "2022-01-18T08:09:50Z"
    generation: 1
    labels:
      app: devicemgmt-service
      pod-template-hash: 77dcfd987b
    name: deployment-devicemgmt-service-77dcfd987b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "128949501"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-77dcfd987b
    uid: 9f615837-ff13-4e5e-a2ee-77645b41ee69
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 77dcfd987b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:09:51+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 77dcfd987b
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:1274
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "56"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 784f8bbd4c
    name: deployment-devicemgmt-service-784f8bbd4c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "106196727"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-784f8bbd4c
    uid: 61ce3dd2-be95-4cdd-967d-93ec4756ad2d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 784f8bbd4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 784f8bbd4c
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:704
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "51"
    creationTimestamp: "2021-07-21T10:24:28Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: 7968f6497f
    name: deployment-devicemgmt-service-7968f6497f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "62274951"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-7968f6497f
    uid: 9153ad53-56fb-44f7-b3cf-127678bca011
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: 7968f6497f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: 7968f6497f
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:513
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "53"
    creationTimestamp: "2021-08-24T05:34:30Z"
    generation: 2
    labels:
      app: devicemgmt-service
      pod-template-hash: d7666f45f
    name: deployment-devicemgmt-service-d7666f45f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-devicemgmt-service
      uid: 21929e80-8b68-4394-8b48-26ab45b4a882
    resourceVersion: "75514586"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-devicemgmt-service-d7666f45f
    uid: 661200b7-64fe-4346-9230-a04820af6ec0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: devicemgmt-service
        pod-template-hash: d7666f45f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: devicemgmt-service
          pod-template-hash: d7666f45f
        name: devicemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/devicemgmtservice:665
          imagePullPolicy: Always
          name: container-devicemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-07T01:28:26Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 5567bd5d66
    name: deployment-firebase-service-5567bd5d66
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "48784528"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-5567bd5d66
    uid: da125d94-8de9-4e2d-90f9-8a1eda06e165
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 5567bd5d66
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 5567bd5d66
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-07-07T09:09:06Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 67664dc8cd
    name: deployment-firebase-service-67664dc8cd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "54561793"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-67664dc8cd
    uid: ce295079-89a6-4769-af38-94cfdecbfcd7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 67664dc8cd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 67664dc8cd
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 1
    labels:
      app: firebase-service
      pod-template-hash: 696cc58764
    name: deployment-firebase-service-696cc58764
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "106196597"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-696cc58764
    uid: 59515a4f-02a6-4076-a959-3130db15fe77
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 696cc58764
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 696cc58764
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:773
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-07-21T10:00:46Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 697547f8cc
    name: deployment-firebase-service-697547f8cc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "54570705"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-697547f8cc
    uid: 3f7ad213-ace1-42c8-9d01-9a234c8f846a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 697547f8cc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 697547f8cc
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-06-30T02:17:40Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 6d958dccf5
    name: deployment-firebase-service-6d958dccf5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "48651909"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-6d958dccf5
    uid: cb839b1d-27eb-48ac-945a-d5dedbfd5687
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 6d958dccf5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 6d958dccf5
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 6fcbd6dd9
    name: deployment-firebase-service-6fcbd6dd9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "106196785"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-6fcbd6dd9
    uid: 55e87494-becb-484a-b605-fe943837c779
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 6fcbd6dd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 6fcbd6dd9
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:773
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-09-27T06:18:23Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 74dfc89f9f
    name: deployment-firebase-service-74dfc89f9f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "106152980"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-74dfc89f9f
    uid: ca7659b1-aebd-4be1-a7c3-2656efb7f3a2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 74dfc89f9f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 74dfc89f9f
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:773
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-06-18T08:37:42Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 784f4849d
    name: deployment-firebase-service-784f4849d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "45769441"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-784f4849d
    uid: b71cd4d3-e167-4c62-99ef-7a5d6122ea0b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 784f4849d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 784f4849d
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-06-30T01:29:35Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 7b65bff976
    name: deployment-firebase-service-7b65bff976
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "45784219"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-7b65bff976
    uid: 82a68964-ea1e-4599-8821-320f0708ce56
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 7b65bff976
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 7b65bff976
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-07-21T10:24:28Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 9858d98bb
    name: deployment-firebase-service-9858d98bb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "82434462"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-9858d98bb
    uid: afd21ce2-9fbd-41f5-97ba-dd4b4fab8c17
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 9858d98bb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 9858d98bb
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-07-21T09:59:18Z"
    generation: 2
    labels:
      app: firebase-service
      pod-template-hash: 98c849564
    name: deployment-firebase-service-98c849564
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-firebase-service
      uid: f74f1009-858a-4d5f-b5f7-813d5630b21c
    resourceVersion: "54562961"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-firebase-service-98c849564
    uid: 552f4ad9-9151-4cec-a953-ca30ac6f0621
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: firebase-service
        pod-template-hash: 98c849564
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: firebase-service
          pod-template-hash: 98c849564
        name: firebase-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/firebaseservice:262
          imagePullPolicy: Always
          name: container-firebase-service
          ports:
          - containerPort: 4103
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "34"
    creationTimestamp: "2021-10-01T10:21:38Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 588c969c5d
    name: deployment-forum-service-588c969c5d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "106153162"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-588c969c5d
    uid: 5ac3e14e-e5a9-4b04-bc2e-25b43cf130d4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 588c969c5d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 588c969c5d
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:814
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "32"
    creationTimestamp: "2021-09-10T01:50:14Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 5b99549cdf
    name: deployment-forum-service-5b99549cdf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "83647036"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-5b99549cdf
    uid: 6bbe2b43-1269-4b9f-a3eb-ae064f954eca
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 5b99549cdf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 5b99549cdf
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:701
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
    creationTimestamp: "2021-08-30T08:04:00Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 5b9f97dd89
    name: deployment-forum-service-5b9f97dd89
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "75400501"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-5b9f97dd89
    uid: 0de0eca0-373f-47ee-a5e1-5390b1253773
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 5b9f97dd89
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 5b9f97dd89
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:680
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-07-28T07:12:05Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 65499ddbfb
    name: deployment-forum-service-65499ddbfb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "61014207"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-65499ddbfb
    uid: aeed38cb-30fa-4649-b43b-f4a7cda026b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 65499ddbfb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 65499ddbfb
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:571
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "35"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 6687d49f6d
    name: deployment-forum-service-6687d49f6d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "106196809"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-6687d49f6d
    uid: d9ae14f3-6703-4d37-83fa-d55f6c58db91
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 6687d49f6d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 6687d49f6d
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:814
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-08-09T05:15:39Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 76dd94d9c5
    name: deployment-forum-service-76dd94d9c5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "63583946"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-76dd94d9c5
    uid: 87e4a324-c512-4257-a302-f49a2ca5aaab
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 76dd94d9c5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 76dd94d9c5
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:581
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "33"
    creationTimestamp: "2021-09-30T05:36:18Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 798c97477f
    name: deployment-forum-service-798c97477f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "84137282"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-798c97477f
    uid: 47ff5ce2-ca94-4a79-8c2a-3eb5bca00e1e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 798c97477f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 798c97477f
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:794
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-08-06T01:37:49Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: 84cdfb69c
    name: deployment-forum-service-84cdfb69c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "62314139"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-84cdfb69c
    uid: cf5d6446-1201-4f43-b749-9c2dd99e98c3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: 84cdfb69c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: 84cdfb69c
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:576
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "36"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 1
    labels:
      app: forum-service
      pod-template-hash: bc478477c
    name: deployment-forum-service-bc478477c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "106196659"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-bc478477c
    uid: 732d2d8f-ced9-4253-98c7-14fed3a7e4e7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: bc478477c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: bc478477c
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:814
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-08-12T07:23:35Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: c7c4446f6
    name: deployment-forum-service-c7c4446f6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "70988486"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-c7c4446f6
    uid: c573ba86-4c77-4a0e-9d53-79e1a2e3cf4d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: c7c4446f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: c7c4446f6
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:607
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-07-26T09:50:42Z"
    generation: 2
    labels:
      app: forum-service
      pod-template-hash: cf9898c55
    name: deployment-forum-service-cf9898c55
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-forum-service
      uid: 54488d37-0b32-42b0-bffd-73c3ab1b8623
    resourceVersion: "57403520"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-forum-service-cf9898c55
    uid: c9d6e1dd-f536-4f8d-ac75-d48cce657ac2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: forum-service
        pod-template-hash: cf9898c55
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: forum-service
          pod-template-hash: cf9898c55
        name: forum-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/forumservice:563
          imagePullPolicy: Always
          name: container-forum-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "39"
    creationTimestamp: "2021-08-31T10:04:05Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 5b595bf4b5
    name: deployment-invitation-service-5b595bf4b5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "82479703"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-5b595bf4b5
    uid: 4d7cbbb2-1db3-46db-9f73-d649fad10cab
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 5b595bf4b5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 5b595bf4b5
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:685
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 5d595b7977
    name: deployment-invitation-service-5d595b7977
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "126055656"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-5d595b7977
    uid: 2ed9942c-7acd-4c10-929c-489f78987242
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 5d595b7977
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 5d595b7977
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:792
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
    creationTimestamp: "2021-09-28T09:48:34Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 5fcb98fc6f
    name: deployment-invitation-service-5fcb98fc6f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "82906042"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-5fcb98fc6f
    uid: 44db6f24-be58-4b36-b527-cff109679b58
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 5fcb98fc6f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-09-28T18:48:34+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 5fcb98fc6f
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:781
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "48"
    creationTimestamp: "2022-01-11T08:43:29Z"
    generation: 1
    labels:
      app: invitation-service
      pod-template-hash: 6788b4fb66
    name: deployment-invitation-service-6788b4fb66
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "126063873"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-6788b4fb66
    uid: f203d5c7-ed7b-4565-923d-8334d0e9f665
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 6788b4fb66
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-11T17:43:29+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 6788b4fb66
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:792
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
    creationTimestamp: "2021-09-28T09:16:39Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 745f544b6
    name: deployment-invitation-service-745f544b6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "82902380"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-745f544b6
    uid: 8f3d5a25-6f6f-4b33-aceb-633642d3742b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 745f544b6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 745f544b6
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:781
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
    creationTimestamp: "2021-09-30T04:37:24Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 76db5bd5fc
    name: deployment-invitation-service-76db5bd5fc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "106153079"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-76db5bd5fc
    uid: 07c0f68a-02db-42e3-9893-3500cf0e58a8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 76db5bd5fc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-09-28T18:48:34+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 76db5bd5fc
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:792
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "47"
    creationTimestamp: "2022-01-11T08:14:58Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 7d6b49d5d7
    name: deployment-invitation-service-7d6b49d5d7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "126063885"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-7d6b49d5d7
    uid: 1959ec33-2278-4c11-999a-e4308a238e60
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 7d6b49d5d7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-11T17:14:57+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 7d6b49d5d7
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:792
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "40"
    creationTimestamp: "2021-09-27T08:57:19Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 8575fcdc8b
    name: deployment-invitation-service-8575fcdc8b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "82893406"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-8575fcdc8b
    uid: ac5fafb4-f03d-4123-94b1-4bde14f0ae21
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 8575fcdc8b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 8575fcdc8b
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:774
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
    creationTimestamp: "2021-09-28T10:01:02Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: 86d4f86ccd
    name: deployment-invitation-service-86d4f86ccd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "83630377"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-86d4f86ccd
    uid: 0693cd64-aae7-4113-a891-415ec718a752
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: 86d4f86ccd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-09-28T18:48:34+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: 86d4f86ccd
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:784
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: f74f977b4
    name: deployment-invitation-service-f74f977b4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "106196805"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-f74f977b4
    uid: e39a117b-b8f6-44cc-94aa-ed462459a839
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: f74f977b4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: f74f977b4
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:792
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "38"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: invitation-service
      pod-template-hash: ff9b976c5
    name: deployment-invitation-service-ff9b976c5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-invitation-service
      uid: d84cf6b2-18ec-4be1-b8dc-82f00e2c19ab
    resourceVersion: "71434187"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-invitation-service-ff9b976c5
    uid: c3865984-f6e1-4483-babc-a0a50bcff6f7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: invitation-service
        pod-template-hash: ff9b976c5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: invitation-service
          pod-template-hash: ff9b976c5
        name: invitation-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/invitationservice:434
          imagePullPolicy: Always
          name: container-invitation-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "32"
    creationTimestamp: "2021-07-15T07:09:20Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 54446cdf94
    name: deployment-ippsynccl-service-54446cdf94
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "52045450"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-54446cdf94
    uid: a7558fb5-eb03-4f31-988b-6fbcdf587098
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 54446cdf94
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 54446cdf94
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:516
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "39"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 55dd74fc95
    name: deployment-ippsynccl-service-55dd74fc95
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "106153096"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-55dd74fc95
    uid: 44bd8e28-c6c4-434b-b242-6b9c08446324
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 55dd74fc95
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 55dd74fc95
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "34"
    creationTimestamp: "2021-07-15T07:42:29Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 56655b4848
    name: deployment-ippsynccl-service-56655b4848
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "52057340"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-56655b4848
    uid: 7b851a51-d232-43c7-ad32-b0ada8dd0718
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 56655b4848
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 56655b4848
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:518
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "40"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 5847c487fc
    name: deployment-ippsynccl-service-5847c487fc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "106196811"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-5847c487fc
    uid: 00dca510-f60f-4a26-a45b-6e30fee096fe
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 5847c487fc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 5847c487fc
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "38"
    creationTimestamp: "2021-07-21T10:00:46Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 645b678448
    name: deployment-ippsynccl-service-645b678448
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "54570785"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-645b678448
    uid: f8f361ec-6a61-4dfd-b12f-a5ad86fc2689
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 645b678448
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 645b678448
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
    creationTimestamp: "2021-07-15T06:53:10Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 698496ddbc
    name: deployment-ippsynccl-service-698496ddbc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "52043082"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-698496ddbc
    uid: eac16a92-9d08-4294-9208-b90090a556d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 698496ddbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 698496ddbc
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:515
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "33"
    creationTimestamp: "2021-07-15T07:17:18Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 6c94f4d6df
    name: deployment-ippsynccl-service-6c94f4d6df
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "52052631"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-6c94f4d6df
    uid: d3cf0285-fcd5-4bbf-ae76-b3d3ea2eea9d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 6c94f4d6df
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 6c94f4d6df
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:517
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "37"
    creationTimestamp: "2021-07-21T09:59:18Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 7db4fb6845
    name: deployment-ippsynccl-service-7db4fb6845
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "54563040"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-7db4fb6845
    uid: e9fa769c-b3c4-4c09-9928-34ad64d7c14e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 7db4fb6845
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 7db4fb6845
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "35"
    creationTimestamp: "2021-07-15T07:58:42Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 84dc5b4779
    name: deployment-ippsynccl-service-84dc5b4779
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "52429009"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-84dc5b4779
    uid: 850524ad-0d73-41a5-ae32-d323ee34b638
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 84dc5b4779
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 84dc5b4779
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:519
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "36"
    creationTimestamp: "2021-07-16T05:38:54Z"
    generation: 2
    labels:
      app: ippsynccl-service
      pod-template-hash: 84fb54fff
    name: deployment-ippsynccl-service-84fb54fff
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "54561765"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-84fb54fff
    uid: 08b948f2-e01a-4e29-bc67-0a9edbd219a6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: 84fb54fff
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: 84fb54fff
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 1
    labels:
      app: ippsynccl-service
      pod-template-hash: cb8847bc6
    name: deployment-ippsynccl-service-cb8847bc6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsynccl-service
      uid: 360390d6-9fe9-4c5f-80e1-72c4ab65d729
    resourceVersion: "106196686"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsynccl-service-cb8847bc6
    uid: 5442da4e-e8b7-442d-aa9a-80a10ad3fe53
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ippsynccl-service
        pod-template-hash: cb8847bc6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: ippsynccl-service
          pod-template-hash: cb8847bc6
        name: ippsynccl-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncclservice:528
          imagePullPolicy: Always
          name: container-ippsynccl-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-07-21T10:00:46Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 545cfcf6cf
    name: deployment-ippsyncpb-service-545cfcf6cf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "54570839"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-545cfcf6cf
    uid: 0f61bef6-de5b-44a2-bc6a-dca991e64dd0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 545cfcf6cf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 545cfcf6cf
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:530
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 55f6bc68c8
    name: deployment-ippsyncpb-service-55f6bc68c8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "106196743"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-55f6bc68c8
    uid: c1d105af-868a-499d-8d70-e89e32cc2441
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 55f6bc68c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 55f6bc68c8
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:541
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-11-24T06:40:33Z"
    generation: 1
    labels:
      app: ippsyncpb-service
      pod-template-hash: 5bccf65475
    name: deployment-ippsyncpb-service-5bccf65475
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "106196572"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-5bccf65475
    uid: 1de2d44e-d630-413b-beef-b837872382ee
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 5bccf65475
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 5bccf65475
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:541
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-07-21T09:59:18Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 6868cd5bc4
    name: deployment-ippsyncpb-service-6868cd5bc4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "54563007"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-6868cd5bc4
    uid: ad7a3f3c-3b1b-4755-8ee2-5e50f63397cb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 6868cd5bc4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 6868cd5bc4
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:530
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-07-16T07:45:49Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 6d746ddc9b
    name: deployment-ippsyncpb-service-6d746ddc9b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "54561810"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-6d746ddc9b
    uid: 560ba6dd-e2c0-4d72-ba77-46dcce7f8aef
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 6d746ddc9b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 6d746ddc9b
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:530
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-07-07T01:28:26Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 755b689866
    name: deployment-ippsyncpb-service-755b689866
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "48784586"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-755b689866
    uid: 5583dec9-69dd-47b7-965f-e799b874c250
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 755b689866
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 755b689866
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:266
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-08-10T06:49:34Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 75788fdf6d
    name: deployment-ippsyncpb-service-75788fdf6d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "106153056"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-75788fdf6d
    uid: 6da7f863-dd18-413f-b06d-e80c6737f7e1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 75788fdf6d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 75788fdf6d
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:541
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-06-30T02:17:40Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 759599dd87
    name: deployment-ippsyncpb-service-759599dd87
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "48651962"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-759599dd87
    uid: 97ca1c09-267c-4fd4-accc-db51a032fa2d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 759599dd87
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 759599dd87
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:266
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 7fb6458d7b
    name: deployment-ippsyncpb-service-7fb6458d7b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "62752130"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-7fb6458d7b
    uid: deb64b7b-be03-4b60-89b1-341e00c632ca
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 7fb6458d7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 7fb6458d7b
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:530
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-07-16T05:38:35Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 848975c6f4
    name: deployment-ippsyncpb-service-848975c6f4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "52465311"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-848975c6f4
    uid: edf65df6-f53c-4ac0-99cc-12907aaecafc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 848975c6f4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 848975c6f4
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:529
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2021-07-07T09:09:07Z"
    generation: 2
    labels:
      app: ippsyncpb-service
      pod-template-hash: 849f9dfc74
    name: deployment-ippsyncpb-service-849f9dfc74
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncpb-service
      uid: 7f8c9f4d-6c9f-47b8-af15-584970cb5749
    resourceVersion: "52428892"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncpb-service-849f9dfc74
    uid: 374ffa70-7cee-420e-947c-d2e33e1a5d6a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncpb-service
        pod-template-hash: 849f9dfc74
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncpb-service
          pod-template-hash: 849f9dfc74
        name: ippsyncpb-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncpbservice:266
          imagePullPolicy: Always
          name: container-ippsyncpb-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "66"
    creationTimestamp: "2021-07-21T09:59:19Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 59fc64fb56
    name: deployment-ippsyncsms-service-59fc64fb56
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "54563080"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-59fc64fb56
    uid: 5df7331f-2965-4dca-a1ea-dc886853b05a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 59fc64fb56
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 59fc64fb56
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:532
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "71"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 5d5654d9
    name: deployment-ippsyncsms-service-5d5654d9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "106196955"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-5d5654d9
    uid: c64269b3-7280-4bf1-861a-98ec53ad4839
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 5d5654d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 5d5654d9
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:629
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "63"
    creationTimestamp: "2021-07-16T05:36:21Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 65b95b7fdd
    name: deployment-ippsyncsms-service-65b95b7fdd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "52478721"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-65b95b7fdd
    uid: 5b4cd768-feba-465f-b412-3f0f260256be
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 65b95b7fdd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 65b95b7fdd
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:527
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "64"
    creationTimestamp: "2021-07-16T08:32:34Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 665447f6c9
    name: deployment-ippsyncsms-service-665447f6c9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "52488154"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-665447f6c9
    uid: 8c8fadf6-e503-4706-88d3-44e655fd0d28
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 665447f6c9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 665447f6c9
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:531
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "65"
    creationTimestamp: "2021-07-16T09:05:19Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 697f9974c4
    name: deployment-ippsyncsms-service-697f9974c4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "54561648"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-697f9974c4
    uid: 225fe761-b16e-41d0-b6ac-9dcd597f550d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 697f9974c4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 697f9974c4
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:532
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "69"
    creationTimestamp: "2021-08-10T06:49:58Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 7cdfb8f4df
    name: deployment-ippsyncsms-service-7cdfb8f4df
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "64005126"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-7cdfb8f4df
    uid: 3db9d87a-458b-47cc-b3d7-6bdb7f4eb82f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 7cdfb8f4df
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 7cdfb8f4df
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:542
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "67"
    creationTimestamp: "2021-07-21T10:00:46Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 84466f4f45
    name: deployment-ippsyncsms-service-84466f4f45
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "54570848"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-84466f4f45
    uid: ca1c0532-4a0e-4be2-85fb-b88ebb911a34
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 84466f4f45
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 84466f4f45
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:532
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "70"
    creationTimestamp: "2021-08-13T07:58:20Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: 86c5d999f9
    name: deployment-ippsyncsms-service-86c5d999f9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "106153193"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-86c5d999f9
    uid: ae784f63-2c56-4797-bcb9-dcba7da1fb56
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 86c5d999f9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 86c5d999f9
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:629
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "72"
    creationTimestamp: "2021-11-24T06:40:34Z"
    generation: 1
    labels:
      app: ippsyncsms-service
      pod-template-hash: 8c8c8f664
    name: deployment-ippsyncsms-service-8c8c8f664
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "106196824"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-8c8c8f664
    uid: 1ae8213a-db60-4e97-8217-190441f33ac9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: 8c8c8f664
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: 8c8c8f664
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:629
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "62"
    creationTimestamp: "2021-07-15T10:28:42Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: c7b5fbb67
    name: deployment-ippsyncsms-service-c7b5fbb67
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "52428207"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-c7b5fbb67
    uid: 978bb9c4-8388-4a12-86de-2fac0f8494dc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: c7b5fbb67
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: c7b5fbb67
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:526
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "68"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: ippsyncsms-service
      pod-template-hash: d55d47d94
    name: deployment-ippsyncsms-service-d55d47d94
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ippsyncsms-service
      uid: 4432d70d-dafe-4433-ac6e-84bf2797d519
    resourceVersion: "62752268"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ippsyncsms-service-d55d47d94
    uid: db7c37c8-8e7d-476d-ac5d-e3bb3d56a256
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ippsyncsms-service
        pod-template-hash: d55d47d94
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ippsyncsms-service
          pod-template-hash: d55d47d94
        name: ippsyncsms-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/ippsyncsmsservice:532
          imagePullPolicy: Always
          name: container-ippsyncsms-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 559db4587f
    name: deployment-log-service-559db4587f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "54570818"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-559db4587f
    uid: 09322b71-e456-477d-9db5-560fe91f3097
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 559db4587f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 559db4587f
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2021-06-30T05:57:29Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 58974cc846
    name: deployment-log-service-58974cc846
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "48651999"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-58974cc846
    uid: ce5de3e8-3fe9-4e77-9b71-70d3c830228b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 58974cc846
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 58974cc846
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:431
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2021-07-12T09:46:25Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 6789f6f6d8
    name: deployment-log-service-6789f6f6d8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "54561697"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-6789f6f6d8
    uid: 2ada41f6-d0a6-4c71-ad8c-00da238389e0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 6789f6f6d8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 6789f6f6d8
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 679c88ff68
    name: deployment-log-service-679c88ff68
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "106153189"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-679c88ff68
    uid: ca359499-a436-4e2d-b282-2124667f0fde
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 679c88ff68
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 679c88ff68
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2021-07-07T01:28:27Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 6b8f966859
    name: deployment-log-service-6b8f966859
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "48784518"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-6b8f966859
    uid: 5fd79558-6721-4ebe-8b36-b12c82d12c7c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 6b8f966859
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 6b8f966859
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:431
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-11-24T06:40:34Z"
    generation: 1
    labels:
      app: log-service
      pod-template-hash: 6cdfc595b7
    name: deployment-log-service-6cdfc595b7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "106196783"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-6cdfc595b7
    uid: c04bc1f9-8f36-43a8-8ba4-d1ac27c472be
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 6cdfc595b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 6cdfc595b7
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2021-06-30T02:17:40Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 77bc98987c
    name: deployment-log-service-77bc98987c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "45847452"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-77bc98987c
    uid: ef083a52-a849-4fa9-8dcc-af59c441e4dd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 77bc98987c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 77bc98987c
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:377
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 78c97f9f8b
    name: deployment-log-service-78c97f9f8b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "106196890"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-78c97f9f8b
    uid: 9e11dd4a-2420-4966-b0b6-faf727dd9ab9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 78c97f9f8b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 78c97f9f8b
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2021-06-30T01:29:35Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: 7b9c4c95cd
    name: deployment-log-service-7b9c4c95cd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "45784103"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-7b9c4c95cd
    uid: cd8cc2c0-abd0-42b9-8894-8001e1d576ac
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: 7b9c4c95cd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: 7b9c4c95cd
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:377
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2021-07-07T09:09:07Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: dc44df7dc
    name: deployment-log-service-dc44df7dc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "50852306"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-dc44df7dc
    uid: 6a9e80ef-fd1e-4817-9cfa-29b1ee2ae92e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: dc44df7dc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: dc44df7dc
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:431
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2021-07-21T09:59:19Z"
    generation: 2
    labels:
      app: log-service
      pod-template-hash: dd45b9954
    name: deployment-log-service-dd45b9954
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-log-service
      uid: 0dc979a9-5ab3-406c-9811-d123ea430f63
    resourceVersion: "54563091"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-log-service-dd45b9954
    uid: 3af7286c-e394-4539-839d-bd9728902636
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: log-service
        pod-template-hash: dd45b9954
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: log-service
          pod-template-hash: dd45b9954
        name: log-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/logservice:478
          imagePullPolicy: Always
          name: container-log-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "60"
    creationTimestamp: "2021-07-21T09:59:19Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 56c7bdcb8c
    name: deployment-mcuc-service-56c7bdcb8c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "54563293"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-56c7bdcb8c
    uid: 563d5944-eb3b-45f4-8016-c74dde311645
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 56c7bdcb8c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 56c7bdcb8c
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:492
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "67"
    creationTimestamp: "2021-12-13T05:25:44Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 58c756c68b
    name: deployment-mcuc-service-58c756c68b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "114339061"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-58c756c68b
    uid: 54890747-5f38-4e33-8fd6-acd2a142d042
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 58c756c68b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-12-13T14:25:44+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 58c756c68b
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:911
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "68"
    creationTimestamp: "2021-12-14T00:43:34Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 5b6dc67c7b
    name: deployment-mcuc-service-5b6dc67c7b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "117370293"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-5b6dc67c7b
    uid: aa9efad6-c268-4a32-8179-a8c6ea7f1647
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 5b6dc67c7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-12-14T09:43:34+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 5b6dc67c7b
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:911
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "70"
    creationTimestamp: "2022-01-12T04:11:45Z"
    generation: 1
    labels:
      app: mcuc-service
      pod-template-hash: 5b6f7d5994
    name: deployment-mcuc-service-5b6f7d5994
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "126399721"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-5b6f7d5994
    uid: 06f3de15-eb24-4e5f-9ac1-64fc256d090c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 5b6f7d5994
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-12-14T09:43:34+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 5b6f7d5994
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:1219
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "64"
    creationTimestamp: "2021-11-24T04:10:56Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 6dd47dbd7f
    name: deployment-mcuc-service-6dd47dbd7f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "106196865"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-6dd47dbd7f
    uid: a404a811-a754-45f6-8bf4-c95228ac3539
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 6dd47dbd7f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 6dd47dbd7f
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:579
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "61"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 784ddcd978
    name: deployment-mcuc-service-784ddcd978
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "54571064"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-784ddcd978
    uid: a23d4d7d-728f-4d02-ac50-cdb61625d235
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 784ddcd978
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 784ddcd978
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:492
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "63"
    creationTimestamp: "2021-08-09T04:50:47Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 787446977c
    name: deployment-mcuc-service-787446977c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "106153252"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-787446977c
    uid: 1b258f77-e6d9-4a5a-b81a-d1670a498080
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 787446977c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 787446977c
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:579
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "62"
    creationTimestamp: "2021-07-21T10:24:29Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 79756f84bf
    name: deployment-mcuc-service-79756f84bf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "62307042"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-79756f84bf
    uid: f3552376-c3a4-4202-bb64-1eaa09c3140e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 79756f84bf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 79756f84bf
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:492
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "69"
    creationTimestamp: "2021-12-21T08:31:26Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: 7f9f4754c4
    name: deployment-mcuc-service-7f9f4754c4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "126399733"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-7f9f4754c4
    uid: ad8438b2-4bec-4d18-9747-7d20ecce31f1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: 7f9f4754c4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-12-14T09:43:34+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: 7f9f4754c4
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:579
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "65"
    creationTimestamp: "2021-11-24T06:40:34Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: cb6779798
    name: deployment-mcuc-service-cb6779798
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "114006139"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-cb6779798
    uid: 5a3812c8-dc38-4d66-a56d-d1ae661f2304
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: cb6779798
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: cb6779798
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:579
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "66"
    creationTimestamp: "2021-12-13T05:24:28Z"
    generation: 2
    labels:
      app: mcuc-service
      pod-template-hash: dbd69cdb4
    name: deployment-mcuc-service-dbd69cdb4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-mcuc-service
      uid: c448f879-8a6b-4de4-80a3-13fa4935272a
    resourceVersion: "114006403"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-mcuc-service-dbd69cdb4
    uid: 0ecf5920-eaec-4f15-b8b9-adacdabb7d88
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcuc-service
        pod-template-hash: dbd69cdb4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: mcuc-service
          pod-template-hash: dbd69cdb4
        name: mcuc-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/mcucservice:911
          imagePullPolicy: Always
          name: container-mcuc-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "52"
    creationTimestamp: "2022-01-18T08:22:27Z"
    generation: 3
    labels:
      app: notification-service
      pod-template-hash: 549cdb8946
    name: deployment-notification-service-549cdb8946
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128955296"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-549cdb8946
    uid: c16e4831-bf53-42ee-9743-b3f4d34cffa4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 549cdb8946
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:22:29+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 549cdb8946
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:1273
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "49"
    creationTimestamp: "2022-01-18T08:05:23Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 57c84579d9
    name: deployment-notification-service-57c84579d9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128949459"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-57c84579d9
    uid: e43f5bdd-14a8-4bc9-88d7-2bf38484ebeb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 57c84579d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 57c84579d9
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:1273
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "51"
    creationTimestamp: "2022-01-18T08:12:32Z"
    generation: 3
    labels:
      app: notification-service
      pod-template-hash: 5c98894f6
    name: deployment-notification-service-5c98894f6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128953458"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-5c98894f6
    uid: 9f1954d8-c12b-49e8-bf14-535fa4dc89e3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 5c98894f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:12:33+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 5c98894f6
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:1273
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
    creationTimestamp: "2021-09-03T07:03:34Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 5d6786c7c7
    name: deployment-notification-service-5d6786c7c7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "106153127"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-5d6786c7c7
    uid: 9decc6eb-c3c3-436d-a75a-5c234c532c12
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 5d6786c7c7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 5d6786c7c7
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:695
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "50"
    creationTimestamp: "2022-01-18T08:09:50Z"
    generation: 3
    labels:
      app: notification-service
      pod-template-hash: 5f659b68bd
    name: deployment-notification-service-5f659b68bd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128950418"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-5f659b68bd
    uid: f550f416-2818-4b19-99ae-96e79f24842e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 5f659b68bd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:09:51+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 5f659b68bd
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:1273
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
    creationTimestamp: "2021-08-25T10:04:22Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 66fbcf495c
    name: deployment-notification-service-66fbcf495c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "72615137"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-66fbcf495c
    uid: 36813070-5663-4f76-a15c-9d7b620ae9b0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 66fbcf495c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 66fbcf495c
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:673
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
    creationTimestamp: "2021-08-23T05:23:32Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 684bd6cc4c
    name: deployment-notification-service-684bd6cc4c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "68122279"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-684bd6cc4c
    uid: df881d00-2d6d-40e9-975f-564ac86c63c4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 684bd6cc4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 684bd6cc4c
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:662
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "47"
    creationTimestamp: "2021-11-24T04:10:57Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 74f9d8df4c
    name: deployment-notification-service-74f9d8df4c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "106196968"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-74f9d8df4c
    uid: 5a7c7cc0-dc88-4f69-8292-d31b148af824
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 74f9d8df4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 74f9d8df4c
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:695
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
    creationTimestamp: "2021-08-23T08:32:53Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 79d94cf797
    name: deployment-notification-service-79d94cf797
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "68969866"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-79d94cf797
    uid: aed667c5-9d5d-473a-b8c3-c82a4b549f36
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 79d94cf797
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 79d94cf797
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:664
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "48"
    creationTimestamp: "2021-11-24T06:40:34Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: 7dfb76b698
    name: deployment-notification-service-7dfb76b698
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128955357"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-7dfb76b698
    uid: 9f98a85c-cb8e-4a7c-900f-b58d391b8733
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: 7dfb76b698
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: 7dfb76b698
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:695
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "53"
    creationTimestamp: "2022-01-18T08:28:34Z"
    generation: 2
    labels:
      app: notification-service
      pod-template-hash: b68d4c889
    name: deployment-notification-service-b68d4c889
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-notification-service
      uid: 418b1071-76e8-41ed-9bb5-ee55564ec0d3
    resourceVersion: "128955346"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-notification-service-b68d4c889
    uid: d7f0c690-4957-4588-921a-7f36c34b656d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: notification-service
        pod-template-hash: b68d4c889
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2022-01-18T17:22:29+09:00"
        creationTimestamp: null
        labels:
          app: notification-service
          pod-template-hash: b68d4c889
        name: notification-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/notificationservice:1276
          imagePullPolicy: Always
          name: container-notification-service
          ports:
          - containerPort: 4102
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-07-07T06:08:27Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 5496c975c6
    name: deployment-project-service-5496c975c6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "48784462"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-5496c975c6
    uid: ca3c24a9-20b3-4050-8fe0-8782a34e60d9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 5496c975c6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 5496c975c6
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:459
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-11-24T06:40:34Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 57bd47c6c6
    name: deployment-project-service-57bd47c6c6
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "118620687"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-57bd47c6c6
    uid: ce1f0443-20dc-4f75-b05c-3ba5d4871536
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 57bd47c6c6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 57bd47c6c6
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-07-21T10:24:30Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 5bdb798c95
    name: deployment-project-service-5bdb798c95
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "106153087"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-5bdb798c95
    uid: 38f09f9c-9ef5-4374-b786-b68295b51d9b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 5bdb798c95
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 5bdb798c95
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-07-07T05:13:06Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 67c8bbddcf
    name: deployment-project-service-67c8bbddcf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "48732428"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-67c8bbddcf
    uid: 5640eff0-1c8f-4c99-a273-cf6e7f38cdb5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 67c8bbddcf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 67c8bbddcf
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:458
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 67f8fb97fb
    name: deployment-project-service-67f8fb97fb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "54570865"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-67f8fb97fb
    uid: 391f6858-10e2-4bc2-885a-34c3f201d69e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 67f8fb97fb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 67f8fb97fb
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-07-13T08:04:55Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 69669d5f5
    name: deployment-project-service-69669d5f5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "51251163"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-69669d5f5
    uid: 4eeacced-ab9c-4b05-9394-0f2767e799a4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 69669d5f5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 69669d5f5
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:487
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-13T08:56:42Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 6d7f487b8c
    name: deployment-project-service-6d7f487b8c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "54561835"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-6d7f487b8c
    uid: 0347f5fe-a744-4278-8cd0-b5fcbf6085a5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 6d7f487b8c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 6d7f487b8c
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-12-24T09:00:51Z"
    generation: 1
    labels:
      app: project-service
      pod-template-hash: 7b6479d967
    name: deployment-project-service-7b6479d967
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "118620675"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-7b6479d967
    uid: f10d6252-31da-4f77-835d-9e7ea1e78f23
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 7b6479d967
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 7b6479d967
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:1102
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-07-21T09:59:20Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 7f454d75c7
    name: deployment-project-service-7f454d75c7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "54563190"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-7f454d75c7
    uid: 50825449-3d97-4890-b092-cf46f8eef176
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 7f454d75c7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 7f454d75c7
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-11-24T04:10:57Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 7f6496cd9
    name: deployment-project-service-7f6496cd9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "106196828"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-7f6496cd9
    uid: 166881d5-573b-4bff-9e6e-28acf8ea91d4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 7f6496cd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 7f6496cd9
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:490
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-07-07T09:09:08Z"
    generation: 2
    labels:
      app: project-service
      pod-template-hash: 8555b6b884
    name: deployment-project-service-8555b6b884
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-project-service
      uid: b75561d9-23c6-4388-b7ef-9b5edbfe4a7b
    resourceVersion: "51236109"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-project-service-8555b6b884
    uid: 67fa8507-a645-4dc1-a132-8e2cc307787a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: project-service
        pod-template-hash: 8555b6b884
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: project-service
          pod-template-hash: 8555b6b884
        name: project-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/projectservice:459
          imagePullPolicy: Always
          name: container-project-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-06-30T02:17:41Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 5649d7755f
    name: deployment-scheduler-service-5649d7755f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "48652164"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-5649d7755f
    uid: 530f278b-f322-4bb3-8088-749c7d43c49d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 5649d7755f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 5649d7755f
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-06-30T01:29:37Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 587fd64444
    name: deployment-scheduler-service-587fd64444
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "45784275"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-587fd64444
    uid: e5eef7bc-8278-43ed-a16e-977b27bf4ecc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 587fd64444
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 587fd64444
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-10-27T09:12:54Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 59475777f8
    name: deployment-scheduler-service-59475777f8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "106153132"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-59475777f8
    uid: d59d17db-917b-4057-b144-6007a534ace5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 59475777f8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 59475777f8
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/schedulerservice:82
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-06-18T08:37:43Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 679695dd94
    name: deployment-scheduler-service-679695dd94
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "45769522"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-679695dd94
    uid: e5835736-2396-4714-a14e-001dceb1fa85
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 679695dd94
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 679695dd94
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-07-21T10:24:30Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 6b6dcbd97d
    name: deployment-scheduler-service-6b6dcbd97d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "94714789"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-6b6dcbd97d
    uid: ff98bcce-7a8d-4224-9ae3-2f0b4779a56a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 6b6dcbd97d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 6b6dcbd97d
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2021-07-07T09:09:08Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 6bf6c46894
    name: deployment-scheduler-service-6bf6c46894
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "54561821"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-6bf6c46894
    uid: 0e971957-3b7e-4aec-9e35-eeba2d296121
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 6bf6c46894
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 6bf6c46894
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 777dd5dbdf
    name: deployment-scheduler-service-777dd5dbdf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "54571076"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-777dd5dbdf
    uid: 9df2f937-6d00-49db-8365-e974969ad78b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 777dd5dbdf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 777dd5dbdf
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-11-24T06:40:35Z"
    generation: 1
    labels:
      app: scheduler-service
      pod-template-hash: 79b8c858dc
    name: deployment-scheduler-service-79b8c858dc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "106196855"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-79b8c858dc
    uid: eb5856f4-0ccc-440b-b8a4-743b12a87ee8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 79b8c858dc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 79b8c858dc
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/schedulerservice:82
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-07-21T09:59:20Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: 864f69cfb4
    name: deployment-scheduler-service-864f69cfb4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "54563212"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-864f69cfb4
    uid: 76bdd3c9-b672-4298-87c2-31d0794af7cf
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: 864f69cfb4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: 864f69cfb4
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-07-07T01:28:28Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: f88f884f8
    name: deployment-scheduler-service-f88f884f8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "48784728"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-f88f884f8
    uid: 8d9e806e-6d4b-439a-901b-443ca548c8d8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: f88f884f8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: f88f884f8
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/schedulerservice:2095
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-11-24T04:10:57Z"
    generation: 2
    labels:
      app: scheduler-service
      pod-template-hash: fb655d876
    name: deployment-scheduler-service-fb655d876
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-scheduler-service
      uid: c2549901-3e2e-4b9b-9984-32f101a95a20
    resourceVersion: "106196984"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-scheduler-service-fb655d876
    uid: 652d7ea8-a43e-48e3-8737-94974e4d4abb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: scheduler-service
        pod-template-hash: fb655d876
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: scheduler-service
          pod-template-hash: fb655d876
        name: scheduler-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/schedulerservice:82
          imagePullPolicy: Always
          name: container-scheduler-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
    creationTimestamp: "2021-11-24T06:40:35Z"
    generation: 1
    labels:
      app: storagemgmt-service
      pod-template-hash: 59c6b784b4
    name: deployment-storagemgmt-service-59c6b784b4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "106196888"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-59c6b784b4
    uid: 46686a11-7bcb-4163-b945-075e3c124844
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 59c6b784b4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 59c6b784b4
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-11-24T04:10:57Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 5c5b8bd89c
    name: deployment-storagemgmt-service-5c5b8bd89c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "106196974"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-5c5b8bd89c
    uid: f1a691c0-3517-4040-97bb-ea9610906ec0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 5c5b8bd89c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 5c5b8bd89c
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-06-30T02:17:41Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 5df5b4667c
    name: deployment-storagemgmt-service-5df5b4667c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "48457190"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-5df5b4667c
    uid: 4fc10a89-032f-4e36-bc75-894ebdedf7a9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 5df5b4667c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 5df5b4667c
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/storagemgmtservice:2452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-06-18T08:37:43Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 6678ff6d6d
    name: deployment-storagemgmt-service-6678ff6d6d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "45769589"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-6678ff6d6d
    uid: b17d8410-bd2b-4a09-88ec-d7e794ed439f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 6678ff6d6d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 6678ff6d6d
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/storagemgmtservice:2452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-07-07T01:28:28Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 6f877b8f47
    name: deployment-storagemgmt-service-6f877b8f47
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "48784685"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-6f877b8f47
    uid: f03716d3-8c69-4ee3-980b-fe492efa99c9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 6f877b8f47
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 6f877b8f47
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-07-07T09:09:08Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 749c5995f9
    name: deployment-storagemgmt-service-749c5995f9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "54561973"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-749c5995f9
    uid: c89ede85-d658-404b-b19a-ad3495568ce0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 749c5995f9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 749c5995f9
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 77bc8bf49b
    name: deployment-storagemgmt-service-77bc8bf49b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "54570964"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-77bc8bf49b
    uid: c320666b-bfdd-4c85-9bb4-31fe993e815f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 77bc8bf49b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 77bc8bf49b
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-07-21T10:24:30Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 77cfd9fd79
    name: deployment-storagemgmt-service-77cfd9fd79
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "106153234"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-77cfd9fd79
    uid: a5f237c9-5594-461f-b21b-f09a6148d603
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 77cfd9fd79
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 77cfd9fd79
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-07-21T09:59:20Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 7f7b5f4cdf
    name: deployment-storagemgmt-service-7f7b5f4cdf
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "54563183"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-7f7b5f4cdf
    uid: 672409d5-daad-4ced-be0d-f30ce207e885
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 7f7b5f4cdf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 7f7b5f4cdf
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-06-30T01:29:37Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: 868b4c6c66
    name: deployment-storagemgmt-service-868b4c6c66
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "45784251"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-868b4c6c66
    uid: 85ebf2c6-501d-442c-a9c5-5fa00255e6a3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: 868b4c6c66
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: 868b4c6c66
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/storagemgmtservice:2452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-06T14:08:39Z"
    generation: 2
    labels:
      app: storagemgmt-service
      pod-template-hash: db79595cd
    name: deployment-storagemgmt-service-db79595cd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-storagemgmt-service
      uid: 50137ba2-bfa0-40a5-93f7-b2613c242fad
    resourceVersion: "48652093"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-storagemgmt-service-db79595cd
    uid: 767b0c6b-fd56-4141-a786-2749b9449282
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: storagemgmt-service
        pod-template-hash: db79595cd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: storagemgmt-service
          pod-template-hash: db79595cd
        name: storagemgmt-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/storagemgmtservice:452
          imagePullPolicy: Always
          name: container-storagemgmt-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-11-24T06:40:35Z"
    generation: 1
    labels:
      app: ums-service
      pod-template-hash: 5d9bb8c485
    name: deployment-ums-service-5d9bb8c485
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "106197144"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-5d9bb8c485
    uid: 3a0f2125-ce7f-4929-9dc5-850d337ba358
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 5d9bb8c485
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 5d9bb8c485
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsservice:84
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2021-07-21T10:24:31Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 655db7948b
    name: deployment-ums-service-655db7948b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "94715872"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-655db7948b
    uid: d4ede2ab-02e6-4ee3-90c4-8052d12f112d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 655db7948b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 655db7948b
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2021-06-18T08:37:44Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 6657ff8586
    name: deployment-ums-service-6657ff8586
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "45769610"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-6657ff8586
    uid: c3deafc7-168a-43bf-a4ed-4a6cdb6cdc89
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 6657ff8586
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 6657ff8586
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-07-21T10:00:47Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 679ddb7c4f
    name: deployment-ums-service-679ddb7c4f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "54570943"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-679ddb7c4f
    uid: 139b09b4-6527-4891-976b-fbb913c2c614
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 679ddb7c4f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 679ddb7c4f
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-07-21T09:59:20Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 6bc748f76d
    name: deployment-ums-service-6bc748f76d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "54563272"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-6bc748f76d
    uid: 96a3b95b-1343-4ad0-a593-2e9d7346beab
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 6bc748f76d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 6bc748f76d
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-07-07T01:28:28Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 7856bfd4bb
    name: deployment-ums-service-7856bfd4bb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "48784784"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-7856bfd4bb
    uid: a46df32f-bc38-4649-ab0d-f7d17c22e1a8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 7856bfd4bb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 7856bfd4bb
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-06-30T01:29:37Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 8596db44
    name: deployment-ums-service-8596db44
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "45784255"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-8596db44
    uid: 37489837-fc6b-48ac-990b-281da230c930
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 8596db44
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 8596db44
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2021-06-30T02:17:42Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 8698f94cbc
    name: deployment-ums-service-8698f94cbc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "48652133"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-8698f94cbc
    uid: 93476d57-6294-402a-8d5a-843f87fb6899
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 8698f94cbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 8698f94cbc
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-07-07T09:09:09Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: 8c55c795d
    name: deployment-ums-service-8c55c795d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "54561970"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-8c55c795d
    uid: 3dad9338-17ee-4bdc-ae8c-346b6187060f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: 8c55c795d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: 8c55c795d
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsservice:1616
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-11-24T04:10:57Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: cd8c6c86b
    name: deployment-ums-service-cd8c6c86b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "106197157"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-cd8c6c86b
    uid: 6f75349d-d7e2-405c-8ee3-5c2be7cc326a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: cd8c6c86b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: cd8c6c86b
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsservice:84
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-10-27T09:16:34Z"
    generation: 2
    labels:
      app: ums-service
      pod-template-hash: dff9b989b
    name: deployment-ums-service-dff9b989b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-ums-service
      uid: ef52325c-c177-4096-8ade-bafd081b5ed0
    resourceVersion: "106153338"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-ums-service-dff9b989b
    uid: 3bbe6431-0b4e-4a19-9944-c3c64b37dd06
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ums-service
        pod-template-hash: dff9b989b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: ums-service
          pod-template-hash: dff9b989b
        name: ums-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsservice:84
          imagePullPolicy: Always
          name: container-ums-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2021-06-30T02:17:42Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 555b68b8
    name: deployment-umsemail-service-555b68b8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "48652237"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-555b68b8
    uid: 6b6363e8-7bb2-4548-bcd1-9a9421fe27bd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 555b68b8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 555b68b8
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-07-21T09:59:20Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 567bc469f9
    name: deployment-umsemail-service-567bc469f9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "54563205"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-567bc469f9
    uid: 35d0b76d-5f84-4edb-9bab-a648e2a2ab99
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 567bc469f9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 567bc469f9
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-07-07T09:09:09Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 5768d757c
    name: deployment-umsemail-service-5768d757c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "54561926"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-5768d757c
    uid: 49d99d89-ae91-4b7b-86a5-e914901c7bba
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 5768d757c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 5768d757c
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-06-30T01:29:37Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 5966c94875
    name: deployment-umsemail-service-5966c94875
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "45784267"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-5966c94875
    uid: c832da5e-7691-4003-bf74-bdcf477d2702
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 5966c94875
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 5966c94875
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-07-07T01:28:28Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 5cfb959dfc
    name: deployment-umsemail-service-5cfb959dfc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "48784738"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-5cfb959dfc
    uid: 8324ff20-ccef-4889-88c8-ef744e15e65c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 5cfb959dfc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 5cfb959dfc
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-11-24T04:10:58Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 6b786bc6c
    name: deployment-umsemail-service-6b786bc6c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "106197083"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-6b786bc6c
    uid: 8e30a195-046b-4dc1-9a63-cb9fa288c31a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 6b786bc6c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 6b786bc6c
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsemailservice:297
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2021-07-21T10:24:31Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 6bf594f77
    name: deployment-umsemail-service-6bf594f77
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "94713372"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-6bf594f77
    uid: 7a04448d-e263-44bb-931b-f17d9c067581
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 6bf594f77
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 6bf594f77
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2021-06-18T08:37:44Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 6d45567f9c
    name: deployment-umsemail-service-6d45567f9c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "45769651"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-6d45567f9c
    uid: 238576b6-400d-4668-9ada-817c43913955
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 6d45567f9c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 6d45567f9c
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-10-27T09:08:06Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 77d557445c
    name: deployment-umsemail-service-77d557445c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "106153271"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-77d557445c
    uid: e292df4a-ed27-4d83-a757-4cb03f27bb4d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 77d557445c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 77d557445c
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsemailservice:297
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-11-24T06:40:35Z"
    generation: 1
    labels:
      app: umsemail-service
      pod-template-hash: 79fc469986
    name: deployment-umsemail-service-79fc469986
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "106197071"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-79fc469986
    uid: 5acec075-95df-4b89-9ed2-fc569835c3e5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 79fc469986
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 79fc469986
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/umsemailservice:297
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-07-21T10:00:48Z"
    generation: 2
    labels:
      app: umsemail-service
      pod-template-hash: 7ccd7df56b
    name: deployment-umsemail-service-7ccd7df56b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-umsemail-service
      uid: b6b29470-f008-47a1-8128-6a5b29df9d56
    resourceVersion: "54570935"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-umsemail-service-7ccd7df56b
    uid: 7d62e9af-73f4-4e09-a4bd-ad1de7ccb224
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: umsemail-service
        pod-template-hash: 7ccd7df56b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: umsemail-service
          pod-template-hash: 7ccd7df56b
        name: umsemail-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-common/umsemailservice:1224
          imagePullPolicy: Always
          name: container-umsemail-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "47"
    creationTimestamp: "2021-08-05T07:39:20Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 5746bc6c7b
    name: deployment-user-service-5746bc6c7b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "106153204"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-5746bc6c7b
    uid: 45ea4171-fc73-473f-9f0f-a35688f80235
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 5746bc6c7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 5746bc6c7b
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:575
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
    creationTimestamp: "2021-07-21T10:00:48Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 584c4fc47
    name: deployment-user-service-584c4fc47
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "54570870"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-584c4fc47
    uid: 4a8ee4f2-be97-48fa-8701-d1b838abe7c4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 584c4fc47
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 584c4fc47
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:391
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "50"
    creationTimestamp: "2021-12-16T05:14:12Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 6576bbdf7b
    name: deployment-user-service-6576bbdf7b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "117003326"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-6576bbdf7b
    uid: 2547bc59-bcc5-42d1-8427-47770422e536
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 6576bbdf7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 6576bbdf7b
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:949
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
    creationTimestamp: "2021-07-07T01:28:28Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 69b7bd6f88
    name: deployment-user-service-69b7bd6f88
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "48784674"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-69b7bd6f88
    uid: 4e4af9c0-bd97-4661-8878-968dfbb2dfa5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 69b7bd6f88
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 69b7bd6f88
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:391
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
    creationTimestamp: "2021-07-21T10:24:31Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 7766c47f68
    name: deployment-user-service-7766c47f68
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "60658222"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-7766c47f68
    uid: 6cbde6b9-c560-4246-9539-b86cc21598fe
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 7766c47f68
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 7766c47f68
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:391
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "49"
    creationTimestamp: "2021-11-24T06:40:35Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 7c7754667
    name: deployment-user-service-7c7754667
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "115244997"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-7c7754667
    uid: 1e7be4e5-c3a1-457a-a2c7-18d386999546
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 7c7754667
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 7c7754667
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:575
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "51"
    creationTimestamp: "2021-12-20T11:14:01Z"
    generation: 1
    labels:
      app: user-service
      pod-template-hash: 7f84984469
    name: deployment-user-service-7f84984469
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "117003314"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-7f84984469
    uid: 0d02b7ec-4478-4804-b797-df4340324a48
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 7f84984469
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 7f84984469
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:1028
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
    creationTimestamp: "2021-07-21T09:59:21Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 867b8884c4
    name: deployment-user-service-867b8884c4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "54563260"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-867b8884c4
    uid: abd6ead1-1243-4ee1-9f30-5358f6381aa9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 867b8884c4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 867b8884c4
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:391
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
    creationTimestamp: "2021-07-07T09:09:09Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: 86d957556d
    name: deployment-user-service-86d957556d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "54561918"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-86d957556d
    uid: 4d798831-316a-4ea7-814e-3d0791263a9d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: 86d957556d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: 86d957556d
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:391
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
    creationTimestamp: "2021-08-05T04:55:31Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: cd998dbd9
    name: deployment-user-service-cd998dbd9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "60705200"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-cd998dbd9
    uid: bcb0ce21-404d-4696-b18d-ebf03695c5c9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: cd998dbd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: cd998dbd9
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:572
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "48"
    creationTimestamp: "2021-11-24T04:10:58Z"
    generation: 2
    labels:
      app: user-service
      pod-template-hash: d7984f6f4
    name: deployment-user-service-d7984f6f4
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-user-service
      uid: 6fe7dd82-647d-4991-bf74-f9105b14c9a6
    resourceVersion: "106196900"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-user-service-d7984f6f4
    uid: 7be95930-d68f-4af8-91cb-afe7863d2310
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: user-service
        pod-template-hash: d7984f6f4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: user-service
          pod-template-hash: d7984f6f4
        name: user-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/userservice:575
          imagePullPolicy: Always
          name: container-user-service
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2021-07-20T05:06:41Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 5744896cbc
    name: deployment-usersettings-service-5744896cbc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "54092011"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-5744896cbc
    uid: 0337ae37-a096-41ff-8fd5-3262cc7d7643
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 5744896cbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 5744896cbc
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:537
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2021-09-16T07:39:51Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 59cbf9956f
    name: deployment-usersettings-service-59cbf9956f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "82434233"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-59cbf9956f
    uid: d4fcd77b-cd96-436e-b442-1d658fa3866e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 59cbf9956f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 59cbf9956f
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:724
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
    creationTimestamp: "2021-11-24T06:40:36Z"
    generation: 1
    labels:
      app: usersettings-service
      pod-template-hash: 5bb9b48b8c
    name: deployment-usersettings-service-5bb9b48b8c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "106196878"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-5bb9b48b8c
    uid: cd3f1d92-cb46-4ddc-a9fd-5bf1d2599ba9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 5bb9b48b8c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 5bb9b48b8c
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:796
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2021-07-21T09:59:21Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 5c8f7d7599
    name: deployment-usersettings-service-5c8f7d7599
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "54563282"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-5c8f7d7599
    uid: 6a3c69d7-b81c-4f20-a2e2-b71729df91f3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 5c8f7d7599
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 5c8f7d7599
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:544
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2021-09-27T06:17:26Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 666878f54f
    name: deployment-usersettings-service-666878f54f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "83708416"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-666878f54f
    uid: 87aecccf-ef57-4ef4-ba5a-3e862d069017
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 666878f54f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 666878f54f
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:728
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2021-07-21T10:00:48Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 6b954d7f74
    name: deployment-usersettings-service-6b954d7f74
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "54571001"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-6b954d7f74
    uid: 064d0216-e692-4042-aa77-049d8637544d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 6b954d7f74
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 6b954d7f74
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:544
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2021-09-30T09:11:58Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 6c65dcdbcb
    name: deployment-usersettings-service-6c65dcdbcb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "106153282"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-6c65dcdbcb
    uid: 165cc31c-871f-42a8-b8ff-5dbbce8d2ca6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 6c65dcdbcb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 6c65dcdbcb
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:796
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
    creationTimestamp: "2021-11-24T04:10:58Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 6f66dd5b58
    name: deployment-usersettings-service-6f66dd5b58
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "106196964"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-6f66dd5b58
    uid: bc2b0fe4-2ffe-49b4-ac82-9b81d9c5ecc5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 6f66dd5b58
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 6f66dd5b58
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:796
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2021-07-21T15:21:36Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: 98dc94446
    name: deployment-usersettings-service-98dc94446
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "77963482"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-98dc94446
    uid: 03720277-0594-4e85-a19e-328422b1a16d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: 98dc94446
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: 98dc94446
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:556
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2021-07-20T06:38:10Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: bf4b8d985
    name: deployment-usersettings-service-bf4b8d985
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "54561883"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-bf4b8d985
    uid: cb43b684-b4d0-4dfc-9d47-453c37304361
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: bf4b8d985
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: bf4b8d985
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:544
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2021-07-21T10:24:31Z"
    generation: 2
    labels:
      app: usersettings-service
      pod-template-hash: d59d4cfb9
    name: deployment-usersettings-service-d59d4cfb9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-usersettings-service
      uid: 416cb218-6383-4fe2-8047-a6e78988129d
    resourceVersion: "54656344"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-usersettings-service-d59d4cfb9
    uid: f88172e6-91d6-4415-ab16-79d75d5aea08
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: usersettings-service
        pod-template-hash: d59d4cfb9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: usersettings-service
          pod-template-hash: d59d4cfb9
        name: usersettings-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/usersettingsservice:544
          imagePullPolicy: Always
          name: container-usersettings-service
          ports:
          - containerPort: 4020
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-07-21T09:59:21Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 54d976c657
    name: deployment-vendor-service-54d976c657
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "54563323"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-54d976c657
    uid: 64de1fad-93ec-43f7-b5eb-40df5d232b2c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 54d976c657
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 54d976c657
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-07-07T09:09:10Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 56c4fcb79
    name: deployment-vendor-service-56c4fcb79
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "54562015"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-56c4fcb79
    uid: 59d73361-29fe-4c81-a2cc-b017d0e9f774
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 56c4fcb79
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 56c4fcb79
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-07-21T10:24:31Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 56f89789b7
    name: deployment-vendor-service-56f89789b7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "106153250"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-56f89789b7
    uid: e62eaea2-b485-419b-97bf-7a621256c7cd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 56f89789b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 56f89789b7
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-07-21T10:00:48Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 5d4d8cd664
    name: deployment-vendor-service-5d4d8cd664
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "54571040"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-5d4d8cd664
    uid: 42bbe944-188e-43de-aac9-c06025e1c129
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 5d4d8cd664
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 5d4d8cd664
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2021-06-30T01:29:38Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 79fd4f6d6f
    name: deployment-vendor-service-79fd4f6d6f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "45784347"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-79fd4f6d6f
    uid: 730627fc-d3d3-4ba5-afb7-b78a71f6eec9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 79fd4f6d6f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 79fd4f6d6f
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-06-30T02:17:42Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 7d5589787d
    name: deployment-vendor-service-7d5589787d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "48652198"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-7d5589787d
    uid: 9b678806-80fb-4b36-ae78-c93fabe3b3bb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 7d5589787d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 7d5589787d
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2021-06-18T08:37:44Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: 8cdd85fc9
    name: deployment-vendor-service-8cdd85fc9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "45478918"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-8cdd85fc9
    uid: 44258c4e-fbcb-446f-b2be-cbdd73f65436
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 8cdd85fc9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 8cdd85fc9
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: rltfoq506.moimstone.com:8899/smartwork-backend-core/vendorservice:1066
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          iptype: private
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2021-11-24T06:40:36Z"
    generation: 1
    labels:
      app: vendor-service
      pod-template-hash: 99c56cb8d
    name: deployment-vendor-service-99c56cb8d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "106196995"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-99c56cb8d
    uid: d215ab11-80e1-4880-ab3c-91a9d0aa1f54
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: 99c56cb8d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: 99c56cb8d
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2021-06-29T08:35:55Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: b9d9cb6c
    name: deployment-vendor-service-b9d9cb6c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "45769686"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-b9d9cb6c
    uid: 6e3abf38-9349-43e6-84b3-b1dc814140f6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: b9d9cb6c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: b9d9cb6c
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2021-07-07T01:28:29Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: ccb7bbddc
    name: deployment-vendor-service-ccb7bbddc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "48784813"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-ccb7bbddc
    uid: 35c8debd-9b31-4544-8b05-28ac20910b19
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: ccb7bbddc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: ccb7bbddc
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2021-11-24T04:10:58Z"
    generation: 2
    labels:
      app: vendor-service
      pod-template-hash: d5bd8bdc7
    name: deployment-vendor-service-d5bd8bdc7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-vendor-service
      uid: fab6b587-c6ca-4a0f-9783-23acad3d0d0d
    resourceVersion: "106197037"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-vendor-service-d5bd8bdc7
    uid: 0fb01166-b125-4988-813b-2d8f7799f06c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: vendor-service
        pod-template-hash: d5bd8bdc7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: vendor-service
          pod-template-hash: d5bd8bdc7
        name: vendor-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          image: icn.ocir.io/cndxe828mdvf/vendorservice:363
          imagePullPolicy: Always
          name: container-vendor-service
          ports:
          - containerPort: 4030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "165"
    creationTimestamp: "2021-10-18T08:26:19Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 58898fdb49
    name: deployment-web-service-58898fdb49
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "106153352"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-58898fdb49
    uid: 671e07d0-d1b7-4696-ae22-ceb65d838d7d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 58898fdb49
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 58898fdb49
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3214
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "164"
    creationTimestamp: "2021-09-14T08:39:15Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 5d4f7bc7d8
    name: deployment-web-service-5d4f7bc7d8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "91036328"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-5d4f7bc7d8
    uid: a83251ad-3b1e-4e42-85ac-cb5743103247
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 5d4f7bc7d8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 5d4f7bc7d8
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3147
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "169"
    creationTimestamp: "2021-11-24T08:03:50Z"
    generation: 1
    labels:
      app: web-service
      pod-template-hash: 5fdc67c8b
    name: deployment-web-service-5fdc67c8b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "106221370"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-5fdc67c8b
    uid: 87520278-3ea4-48ce-b579-23550af2271c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 5fdc67c8b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 5fdc67c8b
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3290
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "168"
    creationTimestamp: "2021-11-24T06:40:36Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 66d4969ddd
    name: deployment-web-service-66d4969ddd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "106221383"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-66d4969ddd
    uid: 0df77893-4109-4461-9a68-7b150e1fd03e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 66d4969ddd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 66d4969ddd
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3289
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "167"
    creationTimestamp: "2021-11-24T06:36:13Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 68649866d9
    name: deployment-web-service-68649866d9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "106197027"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-68649866d9
    uid: a6c8c8fe-fff9-495e-9a93-72e1f7db1dda
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 68649866d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 68649866d9
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3289
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "162"
    creationTimestamp: "2021-08-19T09:50:21Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 6b6f85c96f
    name: deployment-web-service-6b6f85c96f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "74276409"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-6b6f85c96f
    uid: 180f9517-756e-4b72-89b2-21bbf1588317
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 6b6f85c96f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 6b6f85c96f
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3070
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "161"
    creationTimestamp: "2021-08-13T01:41:19Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: 78db7c995f
    name: deployment-web-service-78db7c995f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "66502371"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-78db7c995f
    uid: 9b081373-a6ec-4244-b236-4da54e1203f2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: 78db7c995f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: 78db7c995f
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3050
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "166"
    creationTimestamp: "2021-11-24T04:10:59Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: d56bcb5c9
    name: deployment-web-service-d56bcb5c9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "106195321"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-d56bcb5c9
    uid: be03a7f0-1356-46ca-8060-7aa6da14c9b7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: d56bcb5c9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: d56bcb5c9
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3214
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "163"
    creationTimestamp: "2021-09-07T08:06:00Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: f578bbfc
    name: deployment-web-service-f578bbfc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "77164877"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-f578bbfc
    uid: 0205f160-7670-4c5b-80da-46486b44d60e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: f578bbfc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: f578bbfc
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3126
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "160"
    creationTimestamp: "2021-08-10T09:13:27Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: f8954d8
    name: deployment-web-service-f8954d8
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "63897878"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-f8954d8
    uid: badf786e-4afa-42ab-9c95-61c5cf791cfc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: f8954d8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: f8954d8
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3028
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "159"
    creationTimestamp: "2021-08-10T01:59:38Z"
    generation: 2
    labels:
      app: web-service
      pod-template-hash: fd455f479
    name: deployment-web-service-fd455f479
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web-service
      uid: f8a13719-d20b-4dd0-ab72-a97287c83392
    resourceVersion: "62793543"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web-service-fd455f479
    uid: da9f6c88-01b6-4589-bdad-7d654ee51fde
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web-service
        pod-template-hash: fd455f479
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web-service
          pod-template-hash: fd455f479
        name: web-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3018
          imagePullPolicy: Always
          name: container-web-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "56"
    creationTimestamp: "2021-10-27T08:40:09Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 57bc59ddb7
    name: deployment-web2-service-57bc59ddb7
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "95428169"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-57bc59ddb7
    uid: ebf05a1e-3706-4622-b82a-2a5676697bd9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 57bc59ddb7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 57bc59ddb7
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3258
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "58"
    creationTimestamp: "2021-10-29T05:40:07Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 58d8b9df5c
    name: deployment-web2-service-58d8b9df5c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "106153365"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-58d8b9df5c
    uid: befcdff9-ab09-4f2e-9d1f-1231aaeb886c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 58d8b9df5c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 58d8b9df5c
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3263
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "50"
    creationTimestamp: "2021-10-09T03:32:50Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 59f456c49
    name: deployment-web2-service-59f456c49
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "88515793"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-59f456c49
    uid: f2f3db4e-f126-4abc-8eb9-d379c9012b04
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 59f456c49
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 59f456c49
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3216
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "59"
    creationTimestamp: "2021-11-24T04:10:59Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 5fbc89cbc
    name: deployment-web2-service-5fbc89cbc
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "106197009"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-5fbc89cbc
    uid: 6f743205-ae11-4692-ad27-d5ef09e79098
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 5fbc89cbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 5fbc89cbc
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3263
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "55"
    creationTimestamp: "2021-10-20T06:31:08Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 6c864bb7b
    name: deployment-web2-service-6c864bb7b
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "94705782"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-6c864bb7b
    uid: ab2711c5-abc7-4fd8-a8f6-b67e763cd43b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 6c864bb7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 6c864bb7b
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3242
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "52"
    creationTimestamp: "2021-10-15T05:12:27Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 6f785bc86c
    name: deployment-web2-service-6f785bc86c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "90937637"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-6f785bc86c
    uid: b6b9533b-7d2d-4313-a572-57c76a821880
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 6f785bc86c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 6f785bc86c
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3232
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "54"
    creationTimestamp: "2021-10-18T05:03:52Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 6ffccb755c
    name: deployment-web2-service-6ffccb755c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "91813139"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-6ffccb755c
    uid: 07bfb4c7-ba2b-46a9-b577-ce23dfd7de6f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 6ffccb755c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 6ffccb755c
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3238
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "53"
    creationTimestamp: "2021-10-18T02:35:35Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 75b6645747
    name: deployment-web2-service-75b6645747
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "90979635"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-75b6645747
    uid: 72896011-9007-4b00-a7d0-e072bd2d4117
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 75b6645747
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 75b6645747
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3236
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "57"
    creationTimestamp: "2021-10-29T03:00:46Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: 76cc585856
    name: deployment-web2-service-76cc585856
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "95473385"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-76cc585856
    uid: ecd09c45-404f-46ab-b290-2dadecbdfb3b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 76cc585856
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 76cc585856
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3259
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "60"
    creationTimestamp: "2021-11-24T06:40:36Z"
    generation: 1
    labels:
      app: web2-service
      pod-template-hash: 86cdbd9f96
    name: deployment-web2-service-86cdbd9f96
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "106196905"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-86cdbd9f96
    uid: 9f855de5-9be9-4959-9570-0368df9f7f9e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: 86cdbd9f96
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: 86cdbd9f96
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3263
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "51"
    creationTimestamp: "2021-10-12T03:29:56Z"
    generation: 2
    labels:
      app: web2-service
      pod-template-hash: d44b7dbf9
    name: deployment-web2-service-d44b7dbf9
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-web2-service
      uid: 1e37bc3a-2b28-46fc-bd98-dd8ccd5c1ac0
    resourceVersion: "89767949"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-web2-service-d44b7dbf9
    uid: 8818f5b7-5ca1-4523-bd18-f9cf8f78f9f4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web2-service
        pod-template-hash: d44b7dbf9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web2-service
          pod-template-hash: d44b7dbf9
        name: web2-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:3221
          imagePullPolicy: Always
          name: container-web2-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-12-13T06:09:22Z"
    generation: 1
    labels:
      app: weblanding-service
      pod-template-hash: 5fb868f8cb
    name: deployment-weblanding-service-5fb868f8cb
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-weblanding-service
      uid: 2882776a-93d2-4284-98bb-abc6b0d44cc5
    resourceVersion: "114018904"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-weblanding-service-5fb868f8cb
    uid: 7ac062ed-ff22-4d19-9080-a61c63183ee6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: weblanding-service
        pod-template-hash: 5fb868f8cb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: weblanding-service
          pod-template-hash: 5fb868f8cb
        name: weblanding-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:921
          imagePullPolicy: Always
          name: container-weblanding-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2021-12-13T07:43:40Z"
    generation: 1
    labels:
      app: weblanding-service
      pod-template-hash: 67676c9b55
    name: deployment-weblanding-service-67676c9b55
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: deployment-weblanding-service
      uid: 2882776a-93d2-4284-98bb-abc6b0d44cc5
    resourceVersion: "114045990"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/deployment-weblanding-service-67676c9b55
    uid: 4b38faa0-9c59-4f3a-babe-7ed7d74d4087
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: weblanding-service
        pod-template-hash: 67676c9b55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: weblanding-service
          pod-template-hash: 67676c9b55
        name: weblanding-service-pod
      spec:
        containers:
        - env:
          - name: NM_CLOUD_CONFIG
            valueFrom:
              configMapKeyRef:
                key: encryptedvalue
                name: deploy-env
          - name: MOIMSTONE_ENDPOINT
            value: https://sm-test.moimstone.com
          image: icn.ocir.io/cndxe828mdvf/web:924
          imagePullPolicy: Always
          name: container-weblanding-service
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2021-06-30T01:29:38Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 5d5ccd885c
    name: web-5d5ccd885c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "45784313"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-5d5ccd885c
    uid: e6330e73-df46-4ddc-9bf5-054be2ba42f3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 5d5ccd885c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T10:29:34+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 5d5ccd885c
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2021-05-31T13:31:55Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 6478b5558c
    name: web-6478b5558c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "40958567"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-6478b5558c
    uid: cd24cddd-f98c-4913-867b-84d0deab8e1f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 6478b5558c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-05-31T22:31:49+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 6478b5558c
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2021-11-24T04:10:59Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 654f6959c
    name: web-654f6959c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "106197066"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-654f6959c
    uid: 7259c02a-fdaf-43fe-81f1-2e0ce951288d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 654f6959c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T13:10:54+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 654f6959c
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2021-06-18T08:37:44Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 6cfff4d46c
    name: web-6cfff4d46c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "45769634"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-6cfff4d46c
    uid: 53ab1583-f6a5-4d35-b32a-609811e30c7d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 6cfff4d46c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-18T17:37:41+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 6cfff4d46c
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2021-07-07T01:28:29Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 6ddf5699f
    name: web-6ddf5699f
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "48784857"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-6ddf5699f
    uid: 538e1f3b-af8d-41fb-a7b2-ed18ba3478e3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 6ddf5699f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T10:28:25+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 6ddf5699f
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2021-11-24T06:40:36Z"
    generation: 1
    labels:
      app: web
      pod-template-hash: 7794f48c84
    name: web-7794f48c84
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "106197054"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-7794f48c84
    uid: 2ce49f75-8459-4a0a-8382-59b001056298
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: web
        pod-template-hash: 7794f48c84
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-11-24T15:40:32+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 7794f48c84
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2021-06-30T02:17:43Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 7bfcb6f5d
    name: web-7bfcb6f5d
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "48652187"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-7bfcb6f5d
    uid: d6b07744-90b8-4249-950e-a8fe6a700cc8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 7bfcb6f5d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-06-30T11:17:39+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 7bfcb6f5d
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2021-07-21T10:00:49Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 7c7c7599bd
    name: web-7c7c7599bd
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "54571058"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-7c7c7599bd
    uid: eddcfdc1-4f09-40f3-8c8b-71f58c795daa
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 7c7c7599bd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:00:45+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 7c7c7599bd
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2021-07-07T09:09:10Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 9765bcd79
    name: web-9765bcd79
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "54561885"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-9765bcd79
    uid: 288fc66d-b076-4705-92e2-9d783888340d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 9765bcd79
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-07T18:09:06+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 9765bcd79
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2021-07-21T10:24:32Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: 9cf985c8c
    name: web-9cf985c8c
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "106153329"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-9cf985c8c
    uid: 7909aeb0-e0aa-4257-8abf-0e3c1d69e043
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: 9cf985c8c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T19:24:28+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: 9cf985c8c
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2021-07-21T09:59:21Z"
    generation: 2
    labels:
      app: web
      pod-template-hash: b65fb7b5
    name: web-b65fb7b5
    namespace: smartwork-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web
      uid: dbc11dfc-7776-4c68-83f8-f71f65594aed
    resourceVersion: "54563299"
    selfLink: /apis/apps/v1/namespaces/smartwork-test/replicasets/web-b65fb7b5
    uid: b3d8ca3b-8ea8-4dfe-aca8-5bfd692b3f49
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: web
        pod-template-hash: b65fb7b5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-07-21T18:59:16+09:00"
        creationTimestamp: null
        labels:
          app: web
          pod-template-hash: b65fb7b5
      spec:
        containers:
        - image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: IfNotPresent
          name: hello-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
